{"version":3,"sources":["components/Counter/Counter.jsx","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","App","state","setState","countArr","toString","split","lastDigit","length","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,oCACE,yCAEGH,GAEH,4BACEI,KAAK,SACLC,QAASJ,GAFX,WAMA,4BACEG,KAAK,SACLC,QAASH,GAFX,WAMA,4BACEE,KAAK,SACLC,QAASF,GAFX,eC0BWG,E,4MA1CbC,MAAQ,CACNP,MAAO,G,EAGTC,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBP,MAAOO,EAAMP,MAAQ,O,EAIzBE,OAAS,WACP,EAAKM,UAAS,SAAAD,GAAK,MAAK,CACtBP,MAAOO,EAAMP,MAAQ,S,EAIzBG,SAAW,WACT,IAAMM,EAAW,EAAKF,MAAMP,MAAMU,WAAWC,MAAM,IAC7CC,EAAYH,EAASA,EAASI,OAAS,GAE1B,KAAdD,GAAkC,KAAdA,GACvB,EAAKX,SACL,EAAKC,UAEL,EAAKD,U,4CAIT,WAAU,IACAD,EAAUc,KAAKP,MAAfP,MAER,OACE,kBAAC,EAAD,CACEA,MAAOA,EACPC,OAAQa,KAAKb,OACbC,OAAQY,KAAKZ,OACbC,SAAUW,KAAKX,e,GArCLY,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2b0c541f.chunk.js","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\n\nexport const Counter = ({ count, addOne, add100, increase }) => (\n  <>\n    <h1>\n      Count:&nbsp;\n      {count}\n    </h1>\n    <button\n      type=\"button\"\n      onClick={addOne}\n    >\n      Add One\n    </button>\n    <button\n      type=\"button\"\n      onClick={add100}\n    >\n      Add 100\n    </button>\n    <button\n      type=\"button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  count: Proptypes.number.isRequired,\n  addOne: Proptypes.func.isRequired,\n  add100: Proptypes.func.isRequired,\n  increase: Proptypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    const countArr = this.state.count.toString().split('');\n    const lastDigit = countArr[countArr.length - 1];\n\n    if (+lastDigit === 5 || +lastDigit === 0) {\n      this.addOne();\n      this.add100();\n    } else {\n      this.addOne();\n    }\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <Counter\n        count={count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}